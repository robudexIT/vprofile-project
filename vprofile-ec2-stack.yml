---
- name: Setup Vprofile Stack
  hosts: localhost
  connection: local 
  gather_facts: False 
  tasks: 
    - name: Import VPC setup variables 
      include_vars: vars/vpc-output_vars

    - name: Import vprofile setup Variables
      include_vars: vars/my_vprofile_ec2_setup.yml


    - name: Create vporfile ec2 key
      ec2_key:
        name: vprofilekey
        region: "{{region}}"
      register: vprofilekey_out

    - name: Save private key into file loginkey_vpro.pem 
      copy: 
        content: "{{vprofilekey_out.key.private_key}}"
        dest: "./loginkey_vpro.pem" 
        mode: 0600
      when: vprofilekey_out.changed

    - name: Create Security Group for Load Balancer
      ec2_group:
        name: elb-sg 
        description: This security_group is used by Load Balancer
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules: 
          - proto: tcp
            from_port: 80
            to_port: 80 
            cidr_block: 0.0.0.0/0
          - proto: 443
            from_port: 443 
            to_port: 443
            cidr_block: 0.0.0.0/0
      register: elbSG_out     


    - name: Create Security Group for Vprofile Stack
      ec2_group: 
        name: vprofileSG
        description: Security Group for Vprofile Stack
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        state: present
        rules: 
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{elbSG_out.group_id}}"
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGid}}" 
      register: vprofileSG_out
        

    - name: Update Security Group with its own sg id 
      ec2_group:
        name:  vprofileSG
        description: Security Group for Vprofile Stack
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
         - proto: all 
           group_id: "{{vprofileSG_out.group_id}}"

         
    - name: Create Nginx web01
      ec2_instance:
        name: web01
        instance_type: "t2.micro"
        region: "{{region}}"
        vpc_subnet_id: "{{privsub1id}}"
        image_id: "{{nginx_ami}}"
        key_name: vprofilekey
        security_group: vprofileSG
        tags: 
          Name: "web01"
          Project: Vprofile
          Owner: Devops Team
      register: web01_out
  

    - name: Debug Instance private ip address
      debug:
       var: web01_out.instances[0].network_interfaces[0].private_ip_address
        
      
    - name: Create tomcat app01
      ec2_instance:
        name: app01
        instance_type: "t2.micro"
        image_id: "{{tomcat_ami}}"
        key_name: vprofilekey
        security_group: vprofileSG
        vpc_subnet_id: "{{privsub1id}}"
        tags: 
          Name: "app01"
          Project: Vprofile
          Owner: Devops Team
        region: "{{region}}"
      register: app01_out
        
    - name: Create memcache mc01
      ec2_instance:
        name: "mc01"
        instance_type: "t2.micro"
        key_name: vprofilekey
        image_id: "{{memcache_ami}}"
        vpc_subnet_id: "{{privsub1id}}"
        security_group: vprofileSG
        tags: 
          Name: "mc01"
          Project: Vprofile
          Owner: Devops Team
        region: "{{region}}"
      register: mc01_out

    - name: Create RabbitMQ rmq01
      ec2_instance:
        name: "rmq01"
        key_name: vprofilekey
        image_id: "{{rmq_ami}}"
        instance_type: "t2.micro"
        vpc_subnet_id: "{{privsub1id}}"
        security_group: vprofileSG
        tags:
          Name: "rmq01"
          Project: Vprofile 
          Owner: Devops Team
        region: "{{region}}"
      register: rmq01_out  
       
    - name: Create Mysql db01
      ec2_instance:
        name: "db01"
        key_name: vprofilekey 
        instance_type: "t2.micro" 
        image_id: "{{mysql_ami}}"
        vpc_subnet_id: "{{privsub1id}}"
        security_group: vprofileSG
        tags: 
          Name: "db01" 
          Project: Vprofile 
          Owner: Devops Team 
        region: "{{region}}"
      register: db01_out
    
    - name: Debug Instance private ip address
      debug:
       var: db01_out.instances[0].network_interfaces[0].private_ip_address



    # - name: Insert/Update Hosts IP and Name in file provision-stack/group_vars/hostip
    # - name: Copy login key to provision stack directory
    # - name: Insert/Update Inventory file provision-stack/inventory-vpro